#!/usr/bin/env bash

set -e            # fail fast
set -o pipefail   # don not ignore exit codes when piping output

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
BP_DIR=$(cd $(dirname $0); cd ..; pwd)

source $BP_DIR/bin/common.sh
trap cat_cpanm_build_log ERR
mkdir -p $BUILD_DIR/.profile.d

export_env_dir $ENV_DIR '^BUILDPACK_' ''
if [ -e "$BUILD_DIR/.rakudo-version" ]; then
    RAKUDO_VERSION=`cat "$BUILD_DIR/.rakudo-version"`
fi
RAKUDO_VERSION=${RAKUDO_VERSION-'latest'}
RAKUDO_VERSION=${BUILDPACK_RAKUDO_VERSION-$RAKUDO_VERSION}
RAKUDO_LIBS=${BUILDPACK_RAKUDO_LIBS-''}
RAKUDO_URL=${BUILDPACK_RAKUDO_URL:-"https://heroku-buildpack-rakudo.s3.amazonaws.com/$STACK"}

RAKUDO_PACKAGE="$RAKUDO_URL/rakudo-$RAKUDO_VERSION.tgz"
status "Vendoring $RAKUDO_PACKAGE"
mkdir -p "$BUILD_DIR/vendor/rakudo"
curl -sL $RAKUDO_PACKAGE | tar xzf - -C "$BUILD_DIR/vendor/rakudo" &> /dev/null

export PATH="$BUILD_DIR/vendor/rakudo/bin:$PATH"
### TODO hack: current binaries work only when installed to /app/vendor/rakudo
rm -rf /app/vendor/rakudo; mkdir -p /app/vendor/rakudo
curl -sL $RAKUDO_PACKAGE | tar xzf - -C "/app/vendor/rakudo" &> /dev/null
export PATH="/app/vendor/rakudo/bin:$PATH"
export PATH="/app/vendor/rakudo/languages/perl6/site/bin:$PATH"
export PATH="/app/vendor/rakudo/share/perl6/site/bin:$PATH"
###

CURRENT_RAKUDO_VERSION=`perl6 -e'print $*PERL.compiler.version'`
status "Current rakudo version is $CURRENT_RAKUDO_VERSION"

echo "export PATH=\"\$HOME/vendor/rakudo/bin:\$PATH\";" > $BUILD_DIR/.profile.d/buildpack_vendor_rakudo.sh
echo "export PATH=\"\$HOME/vendor/rakudo/languages/perl6/site/bin:\$PATH\";" > $BUILD_DIR/.profile.d/buildpack_vendor_rakudo_site_bin.sh
echo "export PATH=\"\$HOME/vendor/rakudo/share/perl6/site/bin:\$PATH\";" >> $BUILD_DIR/.profile.d/buildpack_vendor_rakudo_site_bin.sh
for package in $RAKUDO_LIBS; do
    RAKUDO_PACKAGE="$RAKUDO_URL/rakudo-$RAKUDO_VERSION-$package.tgz"
    status "Vendoring $RAKUDO_PACKAGE"
    curl -sL $RAKUDO_PACKAGE | tar xzf - -C "$BUILD_DIR/vendor/rakudo" &> /dev/null
done

cd $BUILD_DIR

source $BP_DIR/bin/steps/hooks/pre_compile $ENV_DIR

if [ -d "$CACHE_DIR/rakudo/local" ]; then
  if [ -f "$CACHE_DIR/rakudo/.rakudo-version" ] && [ $(cat $CACHE_DIR/rakudo/.rakudo-version) != "$CURRENT_RAKUDO_VERSION" ]; then
    status "Rakudo version changed, not restoring local directory from cache"
  else
    status "Restoring local directory from cache"
    cp -R "$CACHE_DIR/rakudo/local" . &> /dev/null || true
  fi
fi

## TODO install project dependencies to path "local" and setup lib paths
panda install .

source $BP_DIR/bin/steps/hooks/post_compile $ENV_DIR

rm -rf $CACHE_DIR/rakudo
mkdir -p $CACHE_DIR/rakudo
if [ -d "local" ]; then
  status "Caching local directory for future builds"
  cp -R local $CACHE_DIR/rakudo/
fi
echo $CURRENT_RAKUDO_VERSION >$CACHE_DIR/rakudo/.rakudo-version
